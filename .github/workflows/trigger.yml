name: Quality Gate Trigger

on:
  issue_comment:
    types: [created, edited]

jobs:
  pr_details:
    # This job only runs for
    # * pull request
    # * comments
    # * with a valid demo url - needs regex perhaps?
    # * from the area-core-rc bot
    name: PR details
    # if: |
    #   ${{ github.event.issue.pull_request }} &&
    #   ${{ contains(github.event.comment.body, 'assigned demo url is')}}) &&
    #   ${{ github.event.comment.user.name}}
    runs-on: ubuntu-latest
    steps:
      - name: Get PR Details
        uses: actions/github-script@v3
        id: get-pr
        with:
          script: |
            const prRequest = {
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            }
            try {
              const pr = await github.pulls.get(prRequest)
              console.log('pr.data is ', pr.data);
              return pr.data
            } catch (err) {
              core.setFailed(`Request failed with error ${err}`)
            }

      - name: Set PR details in Environment
        run: |
          echo The PR branch is $PR_BRANCH_NAME
          echo The Repo ${owner}/${repo-name} is $REPO
          echo The comment was by $COMMENT_USER
          echo The comment is $COMMENT_BODY
        env:
          PR_BRANCH_NAME: ${{ fromJSON(steps.get-pr.outputs.result).head.ref }}
          REPO: ${{ fromJSON(steps.get-pr.outputs.result).head.repo.full_name }}
          COMMENT_USER: ${{ github.event.comment.user.login }}
          COMMENT_BODY: ${{ github.event.comment.body }}

      - name: Verify Demo comment - to move to top filter before anything else
        uses: actions/github-script@v3
        with:
          script: |
            const demoRegex = new RegExp('demo.betsson.com');
            const isValidDemoString = demoRegex.test(env.COMMENT)
            const isValidCommenterBot = ( ${{ env.COMMENT_USER }} === "area-core-rc")
            console.log('demoRegex is ', demoRegex);
            console.log('isValidDemoString is ', isValidDemoString);
            console.log('isValidCommenterBot is ', isValidCommenterBot);


  # get-pr-details:
  #   name: Get relevant details for PR
  #   if: github.event.issue.pull_request
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/github-script@v3
  #       id: get-pr
  #       with:
  #         script: |
  #           const request = {
  #             owner: context.repo.owner,
  #             repo: context.repo.repo,
  #             pull_number: context.issue.number
  #           }
  #           core.info(`Getting PR #${request.pull_number} from ${request.owner}/${request.repo}`)
  #           try {
  #             const result = await github.pulls.get(request)
  #             console.log('result.data is ', result.data);
  #             return result.data
  #           } catch (err) {
  #             core.setFailed(`Request failed with error ${err}`)
  #           }

  #     - uses: actions/checkout@v2
  #       with:
  #         repository: ${{ fromJSON(steps.get-pr.outputs.result).head.repo.full_name }}
  #         ref: ${{ fromJSON(steps.get-pr.outputs.result).head.ref }}

  #     - name: Git Status
  #       run: |
  #         git status

  #     - name: Setup Node Version
  #       uses: actions/setup-node@v1
  #       with:
  #         always-auth: false
  #         node-version: "16.x"

  #     - name: Push change to trigger quality gate
  #       run: |
  #         git config --global user.email "cillian.omurchu@betssongroup.com"
  #         git config --global user.name "chillianosson"
  #         ls
  #         rm -rf demo
  #         mkdir demo
  #         touch demo/demo-available3.txt
  #         echo -e "hello\nworld" >> demo/demo-available3.txt
  #         git add demo/demo-available3.txt
  #         git commit -m "feature(quality gate): push something to run quality gate from correct branch"
  #         git push
