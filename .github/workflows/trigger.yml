name: Quality Gate Trigger

on:
  issue_comment:
    types: [created, edited]

jobs:
  pr_details:
    # This job only runs for
    # * pull request
    # * comments
    # * with a valid demo url - needs regex perhaps?
    # * from the area-core-rc bot
    name: PR details
    # if: |
    #   ${{ github.event.issue.pull_request }} &&
    #   ${{ contains(github.event.comment.body, 'assigned demo url is')}}) &&
    #   ${{ github.event.comment.user.name}}
    runs-on: ubuntu-latest
    outputs:
      PR: ${{ steps.get-pr.outputs.result }}
      REPO: ${{ steps.set-variables.outputs.REPO }}
      PR_BRANCH: ${{ steps.set-variables.outputs.PR_BRANCH }}
      COMMENT_USER: ${{ steps.set-variables.outputs.COMMENT_USER }}
      COMMENT_BODY: ${{ steps.set-variables.outputs.COMMENT_BODY }}
    steps:
      - name: Get PR Details
        uses: actions/github-script@v6
        id: get-pr
        with:
          script: |
            const prRequest = {
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            }
            try {
              const pr = await github.pulls.get(prRequest)
              return pr.data
            } catch (err) {
              core.setFailed(`Request failed with error ${err}`)
            }

      - name: Set variables in environment
        id: set-variables
        run: |
          echo "REPO=${{ fromJSON(steps.get-pr.outputs.result).head.repo.full_name }}" >> $GITHUB_OUTPUT
          echo "PR_BRANCH=${{ fromJSON(steps.get-pr.outputs.result).head.ref }}" >> $GITHUB_OUTPUT
          echo "COMMENT_USER=${{ github.event.comment.user.login }}" >> $GITHUB_OUTPUT
          echo "COMMENT_BODY=${{ github.event.comment.body }}" >> $GITHUB_OUTPUT

  comment_verification:
    name: Verify Demo Comment
    runs-on: ubuntu-latest
    needs: [pr_details]
    steps:
      - name: print relevant values
        uses: actions/github-script@v6
        with:
          script: |
            const comment = "${{ needs.pr_details.outputs.COMMENT_BODY }}";
            const user = "${{ needs.pr_details.outputs.COMMENT_USER }}";
            console.log('comment is ', comment);
            console.log('user is ', user);
            const demoRegex = new RegExp('demo.betsson.com');
            const isValidDemoString = demoRegex.test(comment);
            console.log('demoRegex is ', demoRegex);
            console.log('isValidDemoString is ', isValidDemoString);
            return isValidDemoString

  trigger_quality-gate:
    uses: chillianosson/action-practice/.github/workflows/quality-gate.yml@main
    if: ${{ needs.comment_verification.result == 'true'}}
    needs: [pr_details, comment_verification]
    with:
      username: Chilliano

