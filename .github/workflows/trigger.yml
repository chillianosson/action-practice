on:
  workflow_dispatch:
  issue_comment:
    types:
      - created

jobs:
  trigger-quality-gate:
    runs-on: ubuntu-latest
    name: Trigger quality gate correct branch
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: ðŸ”§ Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "16.x"
      - uses: actions/github-script@v6
        id: get-pr
        with:
        # github.ref is full branch name - refs/heads/feature-branch-1
        # github.ref_name is short - feature-branch-1
        # github.token
          script: |
            const request = {
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            }
            try {
              const result = await github.pulls.get(request)
              return result.data
            } catch (err) {
              core.setFailed(`Request failed with error ${err}`)
            }

            console.log(`Getting PR #${request.pull_number} from ${request.owner}/${request.repo}`)
            console.log('context.repo.owner is ', context.repo.owner);
            console.log('context.repo.repo is ', context.repo.repo);
            console.log('context.repo.issue.number is ', context.repo.issue.number);

      #  const possiblePR = $(echo $GITHUB_REF | awk 'BEGIN { FS = "/" } ; { print $3 }');
      #  const request2 = `/repos/{context.repo.owner}/${context.repo.repo}/pulls`;

      # - uses: actions/checkout@v2
      #   with:
      #     repository: ${{ fromJSON(steps.get-pr.outputs.result).head.repo.full_name }}
      #     ref: ${{ fromJSON(steps.get-pr.outputs.result).head.sha }} # or .head.ref for branch name

    # if: contains(github.event.comment.body, 'demo-available')
    # name: Trigger that quality baby
    # uses: chillianosson/action-practice/.github/workflows/quality-gate.yml@main
    # with:
    # e2e-branch: "lets go baby"

  # demo-available:
  #   runs-on: ubuntu-latest
  #   if: contains(github.event.comment.body, 'demo-available')
  #   steps:
  #     - name: Trigger Quality Gate
  #       uses: chillianosson/action-practice/.github/workflows/quality-gate.yml@main
  #       with:
  #         e2e-branch: "Passed input data branch name from triggerrrrrrr"
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #     - name: Like comment
  #       uses: actions/github-script@v4
  #       with:
  #         script: |
  #           const {owner, repo} = context.issue
  #           github.reactions.createForIssueComment({
  #             owner,
  #             repo,
  #             comment_id: context.payload.comment.id,
  #             content: "+1",
  #           });
